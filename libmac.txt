mostrarsalec macro num
	cmp num, 31h
        je  opci1   
        cmp num, 32h
        je  opci2
        cmp num, 33h
        je  opci3
	opci1:
        	mov dx, offset cadx1	
		mostrarcad
		jmp exit1   
    	opci2:  
        	mov dx, offset cadx2
		mostrarcad 
		jmp exit1  
    	opci3:  
        	mov dx, offset cadx3
		mostrarcad
	exit1: 
endm

mostrar macro
        mov ah, 02h
        int 21h
endm

mostrarcad macro
        mov ah, 09h
        int 21h
endm

salto macro
        push dx
        push ax
        mov dl, 10
        mov ah, 02h
        int 21h   
        mov dl, 13
        int 21h
        pop ax
        pop dx
endm

seleccion macro
	mov ah, 08      
        int 21h
	mov ah, 02             
        mov bl, al
	mov dl, al
	int 21h             
endm

mostrarselec macro num
	cmp num, 31h
        je  opc1   
        cmp num, 32h
        je  opc2
        cmp num, 33h
        je  opc3
	opc1:
        mov dx, offset cadx1
	mostrarcad
	jmp exit   
    	opc2:  
        mov dx, offset cadx2
	mostrarcad 
	jmp exit  
    	opc3:  
        mov dx, offset cadx3
	mostrarcad
	exit: 
endm

seleccionPC macro
	random num2
    	add num2, 30h
	mov dl, num2
	mov bh, num2
        mostrar
endm

random macro numxx
        push ax
        push dx
        push cx
        push bx
        mov ah,0h
        int 1ah
        mov ax,dx
        xor dx,dx
        mov cx,3
        div cx
        add dx,1
        mov numxx,dl
        pop bx
        pop cx
        pop dx
        pop ax
endm

ganador macro num1, num2
	mov bl, num1
	mov bh, num2
	cmp bl, bh
	je  opcio4

	cmp num1, 31h
        je  opcio1 
  
        cmp num1, 32h
        je  opcio2

        cmp num1, 33h
        je  opcio3
	
	opcio1:
		cmp num2, 32h
		je most2
		cmp num2, 33h
		je most1
	opcio2:
		cmp num2, 31h
		je most1
		cmp num2, 33h
		je most2
	opcio3:
		cmp num2, 31h
		je most2
		cmp num2, 32h
		je most1
	opcio4:
		mostrare
		jmp exit2
	most1:
		mostrar1
		jmp exit2
	most2:
		mostrar2
		jmp exit2
	exit2:
endm

mostrar1 macro
	mov dx, offset cadw1
	mov ah, 09h
        int 21h
endm
	
mostrar2 macro
	mov dx, offset cadw2
	mov ah, 09h
        int 21h
endm	

mostrare macro
	mov dx, offset cadw3
	mov ah, 09h
        int 21h
endm	
	








